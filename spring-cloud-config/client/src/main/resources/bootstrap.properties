#端口号
server.port=7002

spring.application.name=bf

#对应前配置文件中的{application}部分 如果没有配置默认读取spring.application.name
spring.cloud.config.name=bf

#对应前配置文件中的{profile}部分 如果不配置，系统默认default，即取文件：${spring.cloud.config.name}.properties
#可以在系统启动的时候，用命令行传入(--spring.cloud.config.profile=dev|test|prod)：java -jar ./target/client-0.0.1-SNAPSHOT.jar --spring.cloud.config.profile=dev
spring.cloud.config.profile=test

#对应前配置文件的git分支  使用{label}占位符需要注意，如果git仓库分支和标签包含“/”，那么{label}参数在HTTP的URL中应该使用“(_)”来替代
spring.cloud.config.label=config-label-test

#注释掉以从服务注册中心发现配置中心服务
#配置中心的地址 server地址
#spring.cloud.config.uri=http://localhost:7001/

# 从服务注册中心发现配置中心服务
# 开启Config服务发现支持
spring.cloud.config.discovery.enabled=true
# 此处需要设置成Config-Server在Eureka上注册的服务名
spring.cloud.config.discovery.service-id=config-server
# 指定服务发现中心(单点)
#eureka.client.service-url.defaultZone=http://localhost:7011/eureka/

#服务注册中心(集群)
eureka.client.serviceUrl.defaultZone=http://peer1:7012/eureka/,http://peer2:7013/eureka/

#client缓存配置 默认5分钟
#he Config Client supplies a Spring Boot Health Indicator that attempts to load configuration from the Config Server.
# The health indicator can be disabled by setting health.config.enabled=false. The response is also cached for performance reasons.
# The default cache time to live is 5 minutes. To change that value, set the health.config.time-to-live property (in milliseconds).
#health.config.enabled=false

#属性必须配置在bootstrap.properties中，config部分内容才能被正确加载。
#因为config的相关配置会先于application.properties，而bootstrap.properties的加载也是先于application.properties

#访问路径http://localhost:7002/value/username